// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/cmd_list": {
            "get": {
                "description": "Getting a list of all commands.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cmd"
                ],
                "responses": {
                    "200": {
                        "description": "List of commands were gotten successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    }
                }
            }
        },
        "/cmd_list/{id}": {
            "get": {
                "description": "Getting a command by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cmd"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of the command to get",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Command was gotten successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    },
                    "400": {
                        "description": "Bad request if the id is incorrect",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    },
                    "404": {
                        "description": "Not found if there is no command with the given id",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    }
                }
            }
        },
        "/create_cmd": {
            "post": {
                "description": "Create and execute a command",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cmd"
                ],
                "parameters": [
                    {
                        "description": "Request Create Command",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.createCmdRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Command created successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    },
                    "400": {
                        "description": "Bad request if the input data is incorrect",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    },
                    "403": {
                        "description": "Forbidden if attempting a sudo command without admin rights",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    },
                    "500": {
                        "description": "Internal server error if command creation fails",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    }
                }
            }
        },
        "/stop_cmd/{id}": {
            "post": {
                "description": "Stop a command by its id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cmd"
                ],
                "summary": "Stop a command",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of the command to stop",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Command stopped successfully, returns the id of the stopped command",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    },
                    "400": {
                        "description": "Bad request if the id is incorrect or conversion error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    },
                    "404": {
                        "description": "Not found if there is no command with the given id",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.envelope"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_api.createCmdRequest": {
            "type": "object",
            "properties": {
                "cmd_raw": {
                    "type": "string"
                },
                "is_long_cmd": {
                    "type": "boolean"
                }
            }
        },
        "internal_api.envelope": {
            "type": "object",
            "additionalProperties": true
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:7070",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "pg-project",
	Description:      "API to run commands. A command is a bash script. Allow to run commands in parallel",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
